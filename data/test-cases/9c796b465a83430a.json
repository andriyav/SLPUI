{"uid":"9c796b465a83430a","name":"test_list_address_coordinates_0_741","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_address_coordinates_0_741","historyId":"72c55efaf01f78e995c20ba5d5f98206","time":{"start":1738915151276,"stop":1738915205170,"duration":53894},"status":"failed","statusMessage":"AssertionError: False is not true : list_address.properties.coordinates_gs\n+\n[add]\nCreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\n[add]\n[add]\nStrCoordinatesToNumber()\n[add]\nCoordinatesEnhancer(), ,list_address.properties.coordinates_gp\n+\n[add]\nCreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\n[add]\n[add]\nStrCoordinatesToNumber()\n[add]","statusTrace":"tests/test_checklist.py:573: in test_list_address_coordinates\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:568: in test_list_address_coordinates\n    self.assertTrue(result, f'{actual_gs}, ,{actual_gp}')\nE   AssertionError: False is not true : list_address.properties.coordinates_gs\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\nE   [add]\nE   [add]\nE   StrCoordinatesToNumber()\nE   [add]\nE   CoordinatesEnhancer(), ,list_address.properties.coordinates_gp\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\nE   [add]\nE   [add]\nE   StrCoordinatesToNumber()\nE   [add]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1738914841411,"stop":1738914841411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False is not true : list_address.properties.coordinates_gs\n+\n[add]\nCreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\n[add]\n[add]\nStrCoordinatesToNumber()\n[add]\nCoordinatesEnhancer(), ,list_address.properties.coordinates_gp\n+\n[add]\nCreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\n[add]\n[add]\nStrCoordinatesToNumber()\n[add]","statusTrace":"tests/test_checklist.py:573: in test_list_address_coordinates\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:568: in test_list_address_coordinates\n    self.assertTrue(result, f'{actual_gs}, ,{actual_gp}')\nE   AssertionError: False is not true : list_address.properties.coordinates_gs\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\nE   [add]\nE   [add]\nE   StrCoordinatesToNumber()\nE   [add]\nE   CoordinatesEnhancer(), ,list_address.properties.coordinates_gp\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lat\":\"LIST_46\",\"source_lon\":\"LIST_47\"},skip_values=[])\nE   [add]\nE   [add]\nE   StrCoordinatesToNumber()\nE   [add]","steps":[{"name":"\nMetadata = PROPERTY - A Failed ❌ \n","time":{"start":1738915162810,"stop":1738915162810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - B Ok ✅\n","time":{"start":1738915170423,"stop":1738915170423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - C Ok ✅\n","time":{"start":1738915176596,"stop":1738915176596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - D Ok ✅\n","time":{"start":1738915183445,"stop":1738915183445,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - E Ok ✅\n","time":{"start":1738915190464,"stop":1738915190464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - I Ok ✅\n","time":{"start":1738915198070,"stop":1738915198070,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - J Ok ✅\n","time":{"start":1738915205103,"stop":1738915205103,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"b4826acbd609b8c7","name":"log","source":"b4826acbd609b8c7.txt","type":"text/plain","size":360}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1738915684887,"stop":1738915684887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1344-521"},{"name":"thread","value":"3350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"9c796b465a83430a.json","parameterValues":[]}