{"uid":"af989e0b03ed1685","name":"test_mls_id_sa_id_08_674","fullName":"tests.test_checklist.TestPromotionChecklist#test_mls_id_sa_id_08_674","historyId":"d55c05c04a2bcdfa2e1839a0362d6316","time":{"start":1736265344081,"stop":1736265363306,"duration":19225},"description":"Validate mls_source_id and sa_source_id are correct from here (NOT kw_id) [with source='674']","descriptionHtml":"<p>Validate mls_source_id and sa_source_id are correct from here (NOT kw_id) [with source='674']</p>\n","status":"failed","statusMessage":"AssertionError: Lists differ: ['mls[56 chars]_BREA,const_type=str)', 'sa_source_id\\n+\\n[add[59 chars]nt)'] != ['mls[56 chars]_BREA ,const_type=str)', 'sa_source_id\\n+\\n[ad[60 chars]nt)']\n\nFirst differing element 0:\n'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA,const_type=str)'\n'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA ,const_type=str)'\n\n  ['mls_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n-  'SetConstant(const=BS_BREA,const_type=str)',\n+  'SetConstant(const=BS_BREA ,const_type=str)',\n?                            +\n\n   'sa_source_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   'SetConstant(const=6025,const_type=int)']","statusTrace":"tests/test_checklist.py:310: in test_mls_id_sa_id\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:302: in test_mls_id_sa_id\n    self.assertEqual(actual, target)\nE   AssertionError: Lists differ: ['mls[56 chars]_BREA,const_type=str)', 'sa_source_id\\n+\\n[add[59 chars]nt)'] != ['mls[56 chars]_BREA ,const_type=str)', 'sa_source_id\\n+\\n[ad[60 chars]nt)']\nE   \nE   First differing element 0:\nE   'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA,const_type=str)'\nE   'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA ,const_type=str)'\nE   \nE     ['mls_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE   -  'SetConstant(const=BS_BREA,const_type=str)',\nE   +  'SetConstant(const=BS_BREA ,const_type=str)',\nE   ?                            +\nE   \nE      'sa_source_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      'SetConstant(const=6025,const_type=int)']","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1736260129271,"stop":1736260129271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Validate mls_source_id and sa_source_id are correct from here (NOT kw_id) [with source='674']","status":"failed","statusMessage":"AssertionError: Lists differ: ['mls[56 chars]_BREA,const_type=str)', 'sa_source_id\\n+\\n[add[59 chars]nt)'] != ['mls[56 chars]_BREA ,const_type=str)', 'sa_source_id\\n+\\n[ad[60 chars]nt)']\n\nFirst differing element 0:\n'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA,const_type=str)'\n'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA ,const_type=str)'\n\n  ['mls_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n-  'SetConstant(const=BS_BREA,const_type=str)',\n+  'SetConstant(const=BS_BREA ,const_type=str)',\n?                            +\n\n   'sa_source_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   'SetConstant(const=6025,const_type=int)']","statusTrace":"tests/test_checklist.py:310: in test_mls_id_sa_id\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:302: in test_mls_id_sa_id\n    self.assertEqual(actual, target)\nE   AssertionError: Lists differ: ['mls[56 chars]_BREA,const_type=str)', 'sa_source_id\\n+\\n[add[59 chars]nt)'] != ['mls[56 chars]_BREA ,const_type=str)', 'sa_source_id\\n+\\n[ad[60 chars]nt)']\nE   \nE   First differing element 0:\nE   'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA,const_type=str)'\nE   'mls_[15 chars]add]\\n[add]\\n[add]\\nSetConstant(const=BS_BREA ,const_type=str)'\nE   \nE     ['mls_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE   -  'SetConstant(const=BS_BREA,const_type=str)',\nE   +  'SetConstant(const=BS_BREA ,const_type=str)',\nE   ?                            +\nE   \nE      'sa_source_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      'SetConstant(const=6025,const_type=int)']","steps":[{"name":"\nMetadata = PROPERTY - RESIDENTIALPROPERTY Failed ❌\n","time":{"start":1736265356468,"stop":1736265356469,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - COMMERCIALPROPERTY Failed ❌\n","time":{"start":1736265363203,"stop":1736265363203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1736266696071,"stop":1736266696071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az735-237"},{"name":"thread","value":"2873-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"af989e0b03ed1685.json","parameterValues":[]}