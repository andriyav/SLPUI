{"uid":"a55880a53f967aa5","name":"test_list_address_nullifier_const_07_425","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_address_nullifier_const_07_425","historyId":"1e1e259f8a90f98d1da12a49a0d1a5cd","time":{"start":1736262607294,"stop":1736262629163,"duration":21869},"description":"No elements of list_address are nullified or set constant (except country) [with source='425']","descriptionHtml":"<p>No elements of list_address are nullified or set constant (except country) [with source='425']</p>\n","status":"failed","statusMessage":"AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","statusTrace":"tests/test_checklist.py:95: in test_list_address_nullifier_const\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:88: in test_list_address_nullifier_const\n    self.assertTrue(all(actual), result)\nE   AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1736260129271,"stop":1736260129271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"No elements of list_address are nullified or set constant (except country) [with source='425']","status":"failed","statusMessage":"AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","statusTrace":"tests/test_checklist.py:95: in test_list_address_nullifier_const\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:88: in test_list_address_nullifier_const\n    self.assertTrue(all(actual), result)\nE   AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","steps":[{"name":"\nMetadata = PROPERTY Failed ‚ùå \n","time":{"start":1736262629076,"stop":1736262629076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1736266696071,"stop":1736266696071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az735-237"},{"name":"thread","value":"2873-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"a55880a53f967aa5.json","parameterValues":[]}