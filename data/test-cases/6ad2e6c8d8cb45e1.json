{"uid":"6ad2e6c8d8cb45e1","name":"test_co_list_agent_office_phone_02_30","fullName":"tests.test_checklist.TestPromotionChecklist#test_co_list_agent_office_phone_02_30","historyId":"685b0af12c9385709ce3441b4f135c26","time":{"start":1739690896658,"stop":1739690907124,"duration":10466},"status":"failed","statusMessage":"AssertionError: False is not true","statusTrace":"tests/test_checklist.py:153: in test_co_list_agent_office_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:148: in test_co_list_agent_office_phone\n    self.assertTrue(result)\nE   AssertionError: False is not true","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1739690686858,"stop":1739690686859,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False is not true","statusTrace":"tests/test_checklist.py:153: in test_co_list_agent_office_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:148: in test_co_list_agent_office_phone\n    self.assertTrue(result)\nE   AssertionError: False is not true","steps":[{"name":"Click authorisation button","time":{"start":1739690897405,"stop":1739690898096,"duration":691},"status":"passed","steps":[{"name":"Get authorisation button","time":{"start":1739690897405,"stop":1739690897415,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Source select","time":{"start":1739690898630,"stop":1739690898750,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"source","value":"'30'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select main metadata","time":{"start":1739690900014,"stop":1739690900105,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"metadata","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Implicit wait metadata","time":{"start":1739690900105,"stop":1739690906977,"duration":6872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY Failed ‚ùå \n","time":{"start":1739690907014,"stop":1739690907014,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1739706488545,"stop":1739706488545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1779-524"},{"name":"thread","value":"3377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"6ad2e6c8d8cb45e1.json","parameterValues":[]}