{"uid":"b96b837df7c4a812","name":"test_mls_id_sa_id_03_525","fullName":"tests.test_checklist.TestPromotionChecklist#test_mls_id_sa_id_03_525","historyId":"88a9ef8d2468b7128c1a563e1aa14227","time":{"start":1736376669371,"stop":1736376680602,"duration":11231},"description":"Validate mls_source_id and sa_source_id are correct from here (NOT kw_id) [with source='525']","descriptionHtml":"<p>Validate mls_source_id and sa_source_id are correct from here (NOT kw_id) [with source='525']</p>\n","status":"failed","statusMessage":"AssertionError: Lists differ: ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'] != ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)']\n\nFirst differing element 1:\n'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'\n'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)'\n\n  ['mls_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   'SetConstant(const=CA_GMREB,const_type=str)',\n   'sa_source_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n-  'SetConstant(const=133,const_type=int)']\n?                     ---\n\n+  'SetConstant(const=,const_type=int)']","statusTrace":"tests/test_checklist.py:311: in test_mls_id_sa_id\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:303: in test_mls_id_sa_id\n    self.assertEqual(actual, target)\nE   AssertionError: Lists differ: ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'] != ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)']\nE   \nE   First differing element 1:\nE   'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'\nE   'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)'\nE   \nE     ['mls_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      'SetConstant(const=CA_GMREB,const_type=str)',\nE      'sa_source_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE   -  'SetConstant(const=133,const_type=int)']\nE   ?                     ---\nE   \nE   +  'SetConstant(const=,const_type=int)']","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1736364210529,"stop":1736364210529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Validate mls_source_id and sa_source_id are correct from here (NOT kw_id) [with source='525']","status":"failed","statusMessage":"AssertionError: Lists differ: ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'] != ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)']\n\nFirst differing element 1:\n'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'\n'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)'\n\n  ['mls_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   'SetConstant(const=CA_GMREB,const_type=str)',\n   'sa_source_id\\n'\n   '+\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n   '[add]\\n'\n-  'SetConstant(const=133,const_type=int)']\n?                     ---\n\n+  'SetConstant(const=,const_type=int)']","statusTrace":"tests/test_checklist.py:311: in test_mls_id_sa_id\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:303: in test_mls_id_sa_id\n    self.assertEqual(actual, target)\nE   AssertionError: Lists differ: ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'] != ['mls[103 chars]]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)']\nE   \nE   First differing element 1:\nE   'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=133,const_type=int)'\nE   'sa_s[16 chars]d]\\n[add]\\n[add]\\n[add]\\nSetConstant(const=,const_type=int)'\nE   \nE     ['mls_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      'SetConstant(const=CA_GMREB,const_type=str)',\nE      'sa_source_id\\n'\nE      '+\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE      '[add]\\n'\nE   -  'SetConstant(const=133,const_type=int)']\nE   ?                     ---\nE   \nE   +  'SetConstant(const=,const_type=int)']","steps":[{"name":"\nMetadata = PROPERTY - LISTING Failed ‚ùå\n","time":{"start":1736376680513,"stop":1736376680513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1736380299677,"stop":1736380299677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1153-722"},{"name":"thread","value":"2819-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"b96b837df7c4a812.json","parameterValues":[]}