{"uid":"1262fcaa474a040a","name":"test_list_address_06_55","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_address_06_55","historyId":"2f17fbe03bc162780999f6a5c982aa9e","time":{"start":1739440264239,"stop":1739440276139,"duration":11900},"status":"failed","statusMessage":"AssertionError: False is not true : list_address.properties.address\n+\n[add]\nCreateObjectMapper(json_path={\"a_street_number_start\":\"StreetNumberNumeric\",\"b_street_number_end\":\"StreetNumber\",\"c_street_dir_prefix\":\"StreetDirPrefix\",\"d_street_name\":\"StreetName\",\"e_street_suffix\":\"StreetSuffix\",\"f_street_dir_suffix\":\"StreetDirSuffix\",\"g_unit_number\":\"UnitNumber\",\"h_city\":\"City\",\"i_state_or_province\":\"StateOrProvince\",\"j_postal_code\":\"PostalCode\"},skip_values=[\"None\"])\n[add]\n[add]\n55APIAddressConcatenator()\n[add]","statusTrace":"tests/test_checklist.py:552: in test_list_address\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:547: in test_list_address\n    self.assertTrue(result, actual)\nE   AssertionError: False is not true : list_address.properties.address\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"a_street_number_start\":\"StreetNumberNumeric\",\"b_street_number_end\":\"StreetNumber\",\"c_street_dir_prefix\":\"StreetDirPrefix\",\"d_street_name\":\"StreetName\",\"e_street_suffix\":\"StreetSuffix\",\"f_street_dir_suffix\":\"StreetDirSuffix\",\"g_unit_number\":\"UnitNumber\",\"h_city\":\"City\",\"i_state_or_province\":\"StateOrProvince\",\"j_postal_code\":\"PostalCode\"},skip_values=[\"None\"])\nE   [add]\nE   [add]\nE   55APIAddressConcatenator()\nE   [add]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1739435904660,"stop":1739435904661,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False is not true : list_address.properties.address\n+\n[add]\nCreateObjectMapper(json_path={\"a_street_number_start\":\"StreetNumberNumeric\",\"b_street_number_end\":\"StreetNumber\",\"c_street_dir_prefix\":\"StreetDirPrefix\",\"d_street_name\":\"StreetName\",\"e_street_suffix\":\"StreetSuffix\",\"f_street_dir_suffix\":\"StreetDirSuffix\",\"g_unit_number\":\"UnitNumber\",\"h_city\":\"City\",\"i_state_or_province\":\"StateOrProvince\",\"j_postal_code\":\"PostalCode\"},skip_values=[\"None\"])\n[add]\n[add]\n55APIAddressConcatenator()\n[add]","statusTrace":"tests/test_checklist.py:552: in test_list_address\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:547: in test_list_address\n    self.assertTrue(result, actual)\nE   AssertionError: False is not true : list_address.properties.address\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"a_street_number_start\":\"StreetNumberNumeric\",\"b_street_number_end\":\"StreetNumber\",\"c_street_dir_prefix\":\"StreetDirPrefix\",\"d_street_name\":\"StreetName\",\"e_street_suffix\":\"StreetSuffix\",\"f_street_dir_suffix\":\"StreetDirSuffix\",\"g_unit_number\":\"UnitNumber\",\"h_city\":\"City\",\"i_state_or_province\":\"StateOrProvince\",\"j_postal_code\":\"PostalCode\"},skip_values=[\"None\"])\nE   [add]\nE   [add]\nE   55APIAddressConcatenator()\nE   [add]","steps":[{"name":"\nMetadata = PROPERTY Failed ‚ùå \n","time":{"start":1739440276037,"stop":1739440276037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1739456266650,"stop":1739456266650,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1372-996"},{"name":"thread","value":"3350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"1262fcaa474a040a.json","parameterValues":[]}