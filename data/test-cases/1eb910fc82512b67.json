{"uid":"1eb910fc82512b67","name":"test_list_address_nullifier_const_02_741","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_address_nullifier_const_02_741","historyId":"6b523ba9881661a291345c8db9a4a8b0","time":{"start":1736247150972,"stop":1736247210491,"duration":59519},"description":"No elements of list_address are nullified or set constant (except country) [with source='741']","descriptionHtml":"<p>No elements of list_address are nullified or set constant (except country) [with source='741']</p>\n","status":"failed","statusMessage":"AssertionError: False is not true : {'list_address-properties-address': False, 'list_address-properties-state_prov': True, 'list_address-properties-postal_code': True, 'list_address-properties-street_name': True, 'list_address-properties-street_number': True, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","statusTrace":"tests/test_checklist.py:95: in test_list_address_nullifier_const\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:88: in test_list_address_nullifier_const\n    self.assertTrue(all(actual), result)\nE   AssertionError: False is not true : {'list_address-properties-address': False, 'list_address-properties-state_prov': True, 'list_address-properties-postal_code': True, 'list_address-properties-street_name': True, 'list_address-properties-street_number': True, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1736240867625,"stop":1736240867625,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"No elements of list_address are nullified or set constant (except country) [with source='741']","status":"failed","statusMessage":"AssertionError: False is not true : {'list_address-properties-address': False, 'list_address-properties-state_prov': True, 'list_address-properties-postal_code': True, 'list_address-properties-street_name': True, 'list_address-properties-street_number': True, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","statusTrace":"tests/test_checklist.py:95: in test_list_address_nullifier_const\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:88: in test_list_address_nullifier_const\n    self.assertTrue(all(actual), result)\nE   AssertionError: False is not true : {'list_address-properties-address': False, 'list_address-properties-state_prov': True, 'list_address-properties-postal_code': True, 'list_address-properties-street_name': True, 'list_address-properties-street_number': True, 'list_address-properties-unit_number': True, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","steps":[{"name":"\nMetadata = PROPERTY - A Ok ✅\n","time":{"start":1736247163860,"stop":1736247163860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - B Failed ❌ \n","time":{"start":1736247171495,"stop":1736247171496,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - C Ok ✅\n","time":{"start":1736247178843,"stop":1736247178844,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - D Failed ❌ \n","time":{"start":1736247186418,"stop":1736247186418,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - E Ok ✅\n","time":{"start":1736247194543,"stop":1736247194543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - I Ok ✅\n","time":{"start":1736247202102,"stop":1736247202102,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - J Ok ✅\n","time":{"start":1736247210412,"stop":1736247210412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":7,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1736259712595,"stop":1736259712595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1245-946"},{"name":"thread","value":"2801-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"1eb910fc82512b67.json","parameterValues":[]}