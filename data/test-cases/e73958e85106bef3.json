{"uid":"e73958e85106bef3","name":"test_list_address_coordinates_06_55","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_address_coordinates_06_55","historyId":"70637d7fe13a4122943664acdf6435e3","time":{"start":1739441962474,"stop":1739441974642,"duration":12168},"status":"failed","statusMessage":"AssertionError: False is not true : list_address.properties.coordinates_gs\n+\n[add]\nCreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\n[add]\n[add]\nLatLonValidation()\n[add]\nCoordinatesEnhancer(), ,list_address.properties.coordinates_gp\n+\n[add]\nCreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\n[add]\n[add]\nLatLonValidation()\n[add]\nCoordinatesEnhancer()","statusTrace":"tests/test_checklist.py:583: in test_list_address_coordinates\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:578: in test_list_address_coordinates\n    self.assertTrue(result, f'{actual_gs}, ,{actual_gp}')\nE   AssertionError: False is not true : list_address.properties.coordinates_gs\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\nE   [add]\nE   [add]\nE   LatLonValidation()\nE   [add]\nE   CoordinatesEnhancer(), ,list_address.properties.coordinates_gp\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\nE   [add]\nE   [add]\nE   LatLonValidation()\nE   [add]\nE   CoordinatesEnhancer()","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1739435904660,"stop":1739435904661,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False is not true : list_address.properties.coordinates_gs\n+\n[add]\nCreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\n[add]\n[add]\nLatLonValidation()\n[add]\nCoordinatesEnhancer(), ,list_address.properties.coordinates_gp\n+\n[add]\nCreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\n[add]\n[add]\nLatLonValidation()\n[add]\nCoordinatesEnhancer()","statusTrace":"tests/test_checklist.py:583: in test_list_address_coordinates\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:578: in test_list_address_coordinates\n    self.assertTrue(result, f'{actual_gs}, ,{actual_gp}')\nE   AssertionError: False is not true : list_address.properties.coordinates_gs\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\nE   [add]\nE   [add]\nE   LatLonValidation()\nE   [add]\nE   CoordinatesEnhancer(), ,list_address.properties.coordinates_gp\nE   +\nE   [add]\nE   CreateObjectMapper(json_path={\"source_lan\":\"None\",\"source_lat\":\"None\"},skip_values=[])\nE   [add]\nE   [add]\nE   LatLonValidation()\nE   [add]\nE   CoordinatesEnhancer()","steps":[{"name":"\nMetadata = PROPERTY Failed ‚ùå \n","time":{"start":1739441974557,"stop":1739441974557,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1739456266650,"stop":1739456266650,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1372-996"},{"name":"thread","value":"3350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"e73958e85106bef3.json","parameterValues":[]}