{"uid":"ba4d4abcca1ee409","name":"test_co_list_agent_office_phone_13_465","fullName":"tests.test_checklist.TestPromotionChecklist#test_co_list_agent_office_phone_13_465","historyId":"ed0d91709784adfa4b0211e10ee94e08","time":{"start":1737153430170,"stop":1737153477584,"duration":47414},"description":"co_list_agent_office_phone are mapped with [with source='465']\n            FirstValueProvider:(\"agent_office_phone\",\"office_phone\")\" ","descriptionHtml":"<p>co_list_agent_office_phone are mapped with [with source='465']<br />\nFirstValueProvider:(&quot;agent_office_phone&quot;,&quot;office_phone&quot;)&quot;</p>\n","status":"failed","statusMessage":"AssertionError: 'co_l[61 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'co_l[61 chars]dd]\\nValueProvider(json_path=agent_office_phon[34 chars]add]'\n  co_list_agent_office.properties.co_list_agent_office_phone\n  +\n  [add]\n- FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\n? -----                        --                  -----------------\n+ ValueProvider(json_path=agent_office_phone,skip_values=[])\n  [add]\n  [add]\n  [add]","statusTrace":"tests/test_checklist.py:169: in test_co_list_agent_office_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:161: in test_co_list_agent_office_phone\n    self.assertEqual(CO_OFFICE_PHONE, actual)\nE   AssertionError: 'co_l[61 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'co_l[61 chars]dd]\\nValueProvider(json_path=agent_office_phon[34 chars]add]'\nE     co_list_agent_office.properties.co_list_agent_office_phone\nE     +\nE     [add]\nE   - FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\nE   ? -----                        --                  -----------------\nE   + ValueProvider(json_path=agent_office_phone,skip_values=[])\nE     [add]\nE     [add]\nE     [add]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1737152742103,"stop":1737152742103,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"co_list_agent_office_phone are mapped with [with source='465']\n            FirstValueProvider:(\"agent_office_phone\",\"office_phone\")\" ","status":"failed","statusMessage":"AssertionError: 'co_l[61 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'co_l[61 chars]dd]\\nValueProvider(json_path=agent_office_phon[34 chars]add]'\n  co_list_agent_office.properties.co_list_agent_office_phone\n  +\n  [add]\n- FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\n? -----                        --                  -----------------\n+ ValueProvider(json_path=agent_office_phone,skip_values=[])\n  [add]\n  [add]\n  [add]","statusTrace":"tests/test_checklist.py:169: in test_co_list_agent_office_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:161: in test_co_list_agent_office_phone\n    self.assertEqual(CO_OFFICE_PHONE, actual)\nE   AssertionError: 'co_l[61 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'co_l[61 chars]dd]\\nValueProvider(json_path=agent_office_phon[34 chars]add]'\nE     co_list_agent_office.properties.co_list_agent_office_phone\nE     +\nE     [add]\nE   - FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\nE   ? -----                        --                  -----------------\nE   + ValueProvider(json_path=agent_office_phone,skip_values=[])\nE     [add]\nE     [add]\nE     [add]","steps":[{"name":"\nMetadata = PROPERTY - RE_1 Ok ✅\n","time":{"start":1737153441177,"stop":1737153441177,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - RN_6 Failed ❌\n","time":{"start":1737153448732,"stop":1737153448732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - MF_5 Failed ❌\n","time":{"start":1737153455660,"stop":1737153455660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - VL_2 Ok ✅\n","time":{"start":1737153462551,"stop":1737153462552,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - CL_3 Ok ✅\n","time":{"start":1737153469950,"stop":1737153469950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\nMetadata = PROPERTY - CS_4 Failed ❌\n","time":{"start":1737153477491,"stop":1737153477491,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"cfb25d4f1b51ba99","name":"log","source":"cfb25d4f1b51ba99.txt","type":"text/plain","size":360}],"parameters":[],"stepsCount":6,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1737170581687,"stop":1737170581687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az692-865"},{"name":"thread","value":"2949-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"ba4d4abcca1ee409.json","parameterValues":[]}