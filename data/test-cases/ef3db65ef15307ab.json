{"uid":"ef3db65ef15307ab","name":"test_state_prov_15_192","fullName":"tests.test_checklist.TestPromotionChecklist#test_state_prov_15_192","historyId":"12d9222cd098a9456c98b5393aff4e17","time":{"start":1739360445952,"stop":1739360446804,"duration":852},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: chrome=133.0.6943.53)\nStacktrace:\n#0 0x559421b0809a <unknown>\n#1 0x5594215cf8b0 <unknown>\n#2 0x5594215b5e51 <unknown>\n#3 0x5594215b46fd <unknown>\n#4 0x5594215b4eaf <unknown>\n#5 0x5594215e3757 <unknown>\n#6 0x5594215d86b1 <unknown>\n#7 0x5594215d85a8 <unknown>\n#8 0x5594215a677a <unknown>\n#9 0x5594215a4be4 <unknown>\n#10 0x5594216815cf <unknown>\n#11 0x559421646982 <unknown>\n#12 0x55942166cb8b <unknown>\n#13 0x559421646753 <unknown>\n#14 0x55942161238e <unknown>\n#15 0x559421613b51 <unknown>\n#16 0x559421ad176b <unknown>\n#17 0x559421ad56f2 <unknown>\n#18 0x559421abd8fc <unknown>\n#19 0x559421ad62e4 <unknown>\n#20 0x559421aa19cf <unknown>\n#21 0x559421af6cd8 <unknown>\n#22 0x559421af6eb6 <unknown>\n#23 0x559421b06f16 <unknown>\n#24 0x7fc49b89caa4 <unknown>\n#25 0x7fc49b929c3c <unknown>","statusTrace":"tests/test_runner.py:21: in setUp\n    self._init_driver()\ntests/test_runner.py:37: in _init_driver\n    self.driver.maximize_window()\n/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:536: in maximize_window\n    self.execute(command, None)\n/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a1af4fbb0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: JavaScript code failed\\\\nfrom un...\\\\n#23 0x559421b06f16 \\\\u003Cunknown>\\\\n#24 0x7fc49b89caa4 \\\\u003Cunknown>\\\\n#25 0x7fc49b929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nE       from unknown command: 'Runtime.evaluate' wasn't found\nE         (Session info: chrome=133.0.6943.53)\nE       Stacktrace:\nE       #0 0x559421b0809a <unknown>\nE       #1 0x5594215cf8b0 <unknown>\nE       #2 0x5594215b5e51 <unknown>\nE       #3 0x5594215b46fd <unknown>\nE       #4 0x5594215b4eaf <unknown>\nE       #5 0x5594215e3757 <unknown>\nE       #6 0x5594215d86b1 <unknown>\nE       #7 0x5594215d85a8 <unknown>\nE       #8 0x5594215a677a <unknown>\nE       #9 0x5594215a4be4 <unknown>\nE       #10 0x5594216815cf <unknown>\nE       #11 0x559421646982 <unknown>\nE       #12 0x55942166cb8b <unknown>\nE       #13 0x559421646753 <unknown>\nE       #14 0x55942161238e <unknown>\nE       #15 0x559421613b51 <unknown>\nE       #16 0x559421ad176b <unknown>\nE       #17 0x559421ad56f2 <unknown>\nE       #18 0x559421abd8fc <unknown>\nE       #19 0x559421ad62e4 <unknown>\nE       #20 0x559421aa19cf <unknown>\nE       #21 0x559421af6cd8 <unknown>\nE       #22 0x559421af6eb6 <unknown>\nE       #23 0x559421b06f16 <unknown>\nE       #24 0x7fc49b89caa4 <unknown>\nE       #25 0x7fc49b929c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1739360361517,"stop":1739360361517,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1739360451062,"stop":1739360451062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az797-511"},{"name":"thread","value":"2556-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"ef3db65ef15307ab.json","parameterValues":[]}