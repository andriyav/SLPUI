{"uid":"a10bd0ab672101b1","name":"test_list_agent_office_phone_08_602","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_agent_office_phone_08_602","historyId":"b7cfc2f4a4c156e9ba3a2648f422159a","time":{"start":1736175952116,"stop":1736175964809,"duration":12693},"description":"list_agent_office_phone are mapped with [with source='602']\n    `   FirstValueProvider:(\"agent_office_phone\",\"office_phone\")\" ","descriptionHtml":"<p>list_agent_office_phone are mapped with [with source='602']<br />\n`   FirstValueProvider:(&quot;agent_office_phone&quot;,&quot;office_phone&quot;)&quot;</p>\n","status":"failed","statusMessage":"AssertionError: 'list[55 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'list[55 chars]dd]\\nValueProvider(json_path=list_agent_office[42 chars]add]'\n  list_agent_office.properties.list_agent_office_phone\n  +\n  [add]\n- FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\n+ ValueProvider(json_path=list_agent_office.list_agent_office_phone)\n  [add]\n  [add]\n  [add]","statusTrace":"tests/test_checklist.py:235: in test_list_agent_office_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:227: in test_list_agent_office_phone\n    self.assertEqual(OFFICE_PHONE, actual)\nE   AssertionError: 'list[55 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'list[55 chars]dd]\\nValueProvider(json_path=list_agent_office[42 chars]add]'\nE     list_agent_office.properties.list_agent_office_phone\nE     +\nE     [add]\nE   - FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\nE   + ValueProvider(json_path=list_agent_office.list_agent_office_phone)\nE     [add]\nE     [add]\nE     [add]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1736173355984,"stop":1736173355984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"list_agent_office_phone are mapped with [with source='602']\n    `   FirstValueProvider:(\"agent_office_phone\",\"office_phone\")\" ","status":"failed","statusMessage":"AssertionError: 'list[55 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'list[55 chars]dd]\\nValueProvider(json_path=list_agent_office[42 chars]add]'\n  list_agent_office.properties.list_agent_office_phone\n  +\n  [add]\n- FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\n+ ValueProvider(json_path=list_agent_office.list_agent_office_phone)\n  [add]\n  [add]\n  [add]","statusTrace":"tests/test_checklist.py:235: in test_list_agent_office_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:227: in test_list_agent_office_phone\n    self.assertEqual(OFFICE_PHONE, actual)\nE   AssertionError: 'list[55 chars]dd]\\nFirstValueProvider(json_path=[\"agent_offi[58 chars]add]' != 'list[55 chars]dd]\\nValueProvider(json_path=list_agent_office[42 chars]add]'\nE     list_agent_office.properties.list_agent_office_phone\nE     +\nE     [add]\nE   - FirstValueProvider(json_path=[\"agent_office_phone\",\"office_phone\"],skip_values=[])\nE   + ValueProvider(json_path=list_agent_office.list_agent_office_phone)\nE     [add]\nE     [add]\nE     [add]","steps":[{"name":"\nMetadata = LISTING - KWLS Failed ‚ùå\n","time":{"start":1736175964725,"stop":1736175964725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1736177982732,"stop":1736177982732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az847-313"},{"name":"thread","value":"2773-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a10bd0ab672101b1.json","parameterValues":[]}