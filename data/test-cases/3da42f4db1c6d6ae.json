{"uid":"3da42f4db1c6d6ae","name":"test_list_address_nullifier_const_09_225","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_address_nullifier_const_09_225","historyId":"e0afa2da9d104e796ad3d7801b0b4197","time":{"start":1739478023786,"stop":1739478055210,"duration":31424},"status":"failed","statusMessage":"AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': False, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","statusTrace":"tests/test_checklist.py:90: in test_list_address_nullifier_const\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:85: in test_list_address_nullifier_const\n    self.assertTrue(all(actual), result)\nE   AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': False, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1739472694050,"stop":1739472694051,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': False, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","statusTrace":"tests/test_checklist.py:90: in test_list_address_nullifier_const\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:85: in test_list_address_nullifier_const\n    self.assertTrue(all(actual), result)\nE   AssertionError: False is not true : {'list_address-properties-address': True, 'list_address-properties-state_prov': False, 'list_address-properties-postal_code': False, 'list_address-properties-street_name': False, 'list_address-properties-street_number': False, 'list_address-properties-unit_number': False, 'list_address-properties-street_suffix': True, 'list_address-properties-street_post_dir': True, 'list_address-properties-street_direction': True}","steps":[{"name":"\nMetadata = PROPERTY Failed ‚ùå \n","time":{"start":1739478034736,"stop":1739478034736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Looks like the class FIELDRULE is not mapped","time":{"start":1739478044949,"stop":1739478044949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Looks like the class VIRTUALTOUR is not mapped","time":{"start":1739478055146,"stop":1739478055146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1739486658252,"stop":1739486658252,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az1912-370"},{"name":"thread","value":"3358-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"3da42f4db1c6d6ae.json","parameterValues":[]}