{"uid":"c651ef8d58780acb","name":"test_list_agent_preferred_phone_0_744","fullName":"tests.test_checklist.TestPromotionChecklist#test_list_agent_preferred_phone_0_744","historyId":"502cf1606d89b8fc4276c3ca8ab5206e","time":{"start":1736974531378,"stop":1736974543339,"duration":11961},"description":"list_agent_preferred_phone are mapped with FirstValueProvider:(\"agent_mobile_phone\",\"agent_home_phone\") [with source='744']","descriptionHtml":"<p>list_agent_preferred_phone are mapped with FirstValueProvider:(&quot;agent_mobile_phone&quot;,&quot;agent_home_phone&quot;) [with source='744']</p>\n","status":"failed","statusMessage":"AssertionError: 'list[108 chars]hone\",\"agent_home_phone\"],skip_values=[])\\n[add]\\n[add]\\n[add]' != 'list[108 chars]hone\",\"agent_home_phone\"])\\n[add]\\n[add]\\n[add]'\n  list_agent_office.properties.list_agent_preferred_phone\n  +\n  [add]\n- FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"],skip_values=[])\n?                                                                       ---------------\n+ FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"])\n  [add]\n  [add]\n  [add]","statusTrace":"tests/test_checklist.py:272: in test_list_agent_preferred_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:264: in test_list_agent_preferred_phone\n    self.assertEqual(PREFERRED_PHONE, actual)\nE   AssertionError: 'list[108 chars]hone\",\"agent_home_phone\"],skip_values=[])\\n[add]\\n[add]\\n[add]' != 'list[108 chars]hone\",\"agent_home_phone\"])\\n[add]\\n[add]\\n[add]'\nE     list_agent_office.properties.list_agent_preferred_phone\nE     +\nE     [add]\nE   - FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"],skip_values=[])\nE   ?                                                                       ---------------\nE   + FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"])\nE     [add]\nE     [add]\nE     [add]","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist","time":{"start":1736974410230,"stop":1736974410230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"list_agent_preferred_phone are mapped with FirstValueProvider:(\"agent_mobile_phone\",\"agent_home_phone\") [with source='744']","status":"failed","statusMessage":"AssertionError: 'list[108 chars]hone\",\"agent_home_phone\"],skip_values=[])\\n[add]\\n[add]\\n[add]' != 'list[108 chars]hone\",\"agent_home_phone\"])\\n[add]\\n[add]\\n[add]'\n  list_agent_office.properties.list_agent_preferred_phone\n  +\n  [add]\n- FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"],skip_values=[])\n?                                                                       ---------------\n+ FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"])\n  [add]\n  [add]\n  [add]","statusTrace":"tests/test_checklist.py:272: in test_list_agent_preferred_phone\n    raise e  # Re-raise to ensure the test fails\ntests/test_checklist.py:264: in test_list_agent_preferred_phone\n    self.assertEqual(PREFERRED_PHONE, actual)\nE   AssertionError: 'list[108 chars]hone\",\"agent_home_phone\"],skip_values=[])\\n[add]\\n[add]\\n[add]' != 'list[108 chars]hone\",\"agent_home_phone\"])\\n[add]\\n[add]\\n[add]'\nE     list_agent_office.properties.list_agent_preferred_phone\nE     +\nE     [add]\nE   - FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"],skip_values=[])\nE   ?                                                                       ---------------\nE   + FirstValueProvider(json_path=[\"agent_mobile_phone\",\"agent_home_phone\"])\nE     [add]\nE     [add]\nE     [add]","steps":[{"name":"\nMetadata = PROPERTY Failed ‚ùå\n","time":{"start":1736974543259,"stop":1736974543259,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"f4dc213a438044df","name":"log","source":"f4dc213a438044df.txt","type":"text/plain","size":360}],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestPromotionChecklist::0","time":{"start":1736974602919,"stop":1736974602919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.filterwarnings('ignore::DeprecationWarning')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_checklist"},{"name":"subSuite","value":"TestPromotionChecklist"},{"name":"host","value":"fv-az773-543"},{"name":"thread","value":"2985-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_checklist"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.filterwarnings('ignore::DeprecationWarning')"]},"source":"c651ef8d58780acb.json","parameterValues":[]}